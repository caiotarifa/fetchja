import g from"pluralize";function f(s){if(Array.isArray(s))return s.map(f);let e={type:s.type,id:s.id};for(let t in s.attributes)e[t]=s.attributes[t];for(let t in s.relationships)s.relationships[t].data&&(e[t]=s.relationships[t].data);return e}function q(s){let e={};for(let t of s)e[t.type]||(e[t.type]={}),e[t.type][t.id]=f(t);return e}function h(s){return typeof s=="object"&&s!==null}function b(s){let e={};if(s.data&&(e.data=f(s.data)),s.meta&&(e.meta=s.meta),s.included){let t=q(s.included),a=r=>r.type in t?t[r.type][r.id]:r,o=r=>Array.isArray(r)?r.map(a):a(r);for(let r in t)for(let i in t[r])for(let u in t[r][i]){let n=t[r][i][u];h(n)&&(t[r][i][u]=o(n))}if(Array.isArray(e.data))for(let r of e.data)for(let i in r)h(r[i])&&(r[i]=o(r[i]));else if(h(e.data))for(let r in e.data)h(e.data[r])&&(e.data[r]=o(e.data[r]))}return e}function p(s){if(s.response){let{data:e}=s.response;e?.errors&&(s.errors=e.errors)}throw s}function R(s){return typeof s=="object"&&s!==null}function w(s,e,t={camelCaseTypes:a=>a,pluralTypes:a=>a}){let a=[];function o(i,u){if(R(i)){if(!i.id)throw new Error("All included resources must have an ID.");a.find(n=>n.id===i.id)||a.push(r(i,u))}}function r(i,u){let n={type:t.pluralTypes(t.camelCaseTypes(u))};for(let c in i){if(c==="type")continue;if(c==="id"){n.id=String(i.id);continue}let l=i[c];if(typeof l=="object"){if(n.relationships=n.relationships||{},Array.isArray(l)){n.relationships[c]={data:l.map(d=>(o(d,c),{type:d.type||c,id:d.id}))};continue}n.relationships[c]={data:{type:l.type||c,id:l.id}},o(l,c);continue}n.attributes=n.attributes||{},n.attributes[c]=i[c]}return n}try{let i=r(e,s);return JSON.stringify({data:i,included:a})}catch(i){p(i)}}function T(s,e={},t=""){let a=Array.isArray(e);for(let o in e){let r=e[o],i=t?`${t}[${a?"":o}]`:o;r instanceof Object?T(s,r,i):s.append(i,r)}}function k(s={}){let e=new URLSearchParams;return T(e,s),e}function A(s,e={resourceCase:t=>t,pluralize:t=>t}){let t=s.split("/"),a=t.pop(),o=t.join("/");return[a,`${o}/${e.pluralize(e.resourceCase(a))}`]}function y(s){return s.toLowerCase().replace(/[-_](.)/g,(e,t)=>t.toUpperCase()).replace(/^(.)/,e=>e.toLowerCase())}function x(s){return s.replace(/([a-z])([A-Z])/g,"$1-$2").replace(/_/g,"-").toLowerCase()}function z(s){return s.replace(/([a-z])([A-Z])/g,"$1_$2").replace(/-/g,"_").toLowerCase()}var m="application/vnd.api+json",C=class{constructor(e={headers:{}}){this.baseURL=e.baseURL,this.headers={Accept:m,"Content-Type":m,...e.headers},this.fetchFunction=e.fetchFunction,this.queryFormatter=typeof e.queryFormatter=="function"?e.queryFormatter:a=>k(a),this.camelCaseTypes=e.camelCaseTypes===!1?a=>a:y;let t={camel:y,kebab:x,snake:z,default:a=>a};this.resourceCase=t[e.resourceCase]||t.default,this.pluralize=e.pluralize===!1?a=>a:g,this.onResponseError=a=>a,this.fetch=this.get,this.update=this.patch,this.create=this.post,this.remove=this.delete}#e(e){return A(e,{resourceCase:this.resourceCase,pluralize:this.pluralize})}async request(e={method:"GET",headers:{}}){let t=this.baseURL||e.baseURL,a=new URL(e.url.startsWith("/")?e.url.slice(1):e.url,t.endsWith("/")?t:t+"/");e.params&&(a.search=this.queryFormatter(e.params)),e.body&&(e.body=w(e.type,e.body,{camelCaseTypes:this.camelCaseTypes,pluralTypes:this.pluralize}));let o=()=>{let r=new Headers({...this.headers,...e.headers}),i={method:e.method,body:e.body,headers:r};return typeof this.fetchFunction=="function"?this.fetchFunction(a,i):fetch(a,i)};try{let r=await o();if(!r.ok){r.replayRequest=o;let c=await this.onResponseError(r);if(c instanceof Response&&(r=c),!r.ok)throw new Error(r.statusText)}let i={};for(let[c,l]of r.headers.entries())i[c]=l;let u=i["content-type"],n=u&&u.includes(m)?await r.json():{};return{...n.errors?n:b(n),status:r.status,statusText:r.statusText,headers:i}}catch(r){throw r}}get(e,t={method:"GET"}){try{return t.url=e.split("/").map(a=>this.resourceCase(a)).filter(Boolean).join("/"),this.request(t)}catch(a){throw p(a)}}patch(e,t,a={method:"PATCH"}){try{let[o,r]=this.#e(e);return this.request({url:t?.id?`${r}/${t.id}`:r,body:t,type:o,...a})}catch(o){throw p(o)}}post(e,t,a={method:"POST"}){try{let[o,r]=this.#e(e);return this.request({url:r,body:t,type:o,...a})}catch(o){throw p(o)}}delete(e,t,a={method:"DELETE"}){try{let[o,r]=this.#e(e);return this.request({url:`${r}/${t}`,body:{id:t},type:o,...a})}catch(o){throw p(o)}}};export{C as default};
//# sourceMappingURL=index.js.map
